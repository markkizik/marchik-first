@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap');

@import './keyframes.css';
@import './tabs.css';

body {
    background-image: linear-gradient(to right, #eea2a2 0%, #bbc1bf 19%, #57c6e1 42%, #b49fda 79%, #7ac5d8 100%);
    margin: 0;

    width: 100vw;
    min-height: 100vh;

    font-family: 'Quicksand';
}

/* --------- ttttttsabsssssss ---------- */

.tab {
    display: flex;
    flex-wrap: wrap;

    justify-content: center;

    flex: 1 1 33.333%;
    
    /* max-width: 100%; */

    padding: 24px;
    gap: 5px;

    /* background-color: red; */

    order: 1;
}

.tab-panel {
    display: none;
    order: 10;
    flex: 1 1 100%;
    /* margin: 0 50%; */
}

.tab:has(.tab-actor:checked) + .tab-panel {
    display: block;
}

@media screen and (max-width: 480px) {
    :is(.tab, .tab-panel) {
        order: initial;
    }

    .tab {
        flex-direction: column;
        /* width: 100%; */
    }
}

/* ------------------- */

.main {
    display: flex;

    justify-content: center;
    align-items: center;

    gap: 10px;
    
    min-height: 100%;
}

.container {
    display: flex;
    flex-flow: row wrap;
    flex-wrap: wrap;

    max-width: 100%;
}

.key-strand {
    display: flex;
    justify-content: center;
    align-items: center;

    background-color: rgb(33, 33, 33);

    padding: 10px 10px 25px;

    border-radius: 10px;
    border: 3px solid #111111;
}

/* Стиль для второй клавы */

.style-rgb {
    background-image: linear-gradient(to top, #30cfd0 0%, #330867 100%);

    animation: border1 10s ease infinite;
}
.style-rgb .keyboard-key {
    background-color: rgba(245, 245, 245, 0.6);

    color: rgb(0, 0, 0);
}

/* --------------------------- */

/* Стиль для третьей клавы */

.style-blackish {
    background-image: linear-gradient(to right, #d7d2cc 0%, #304352 100%);
}
.style-blackish .keyboard-key {
    background: linear-gradient(to bottom, #323232 0%, #3F3F3F 40%, #1C1C1C 150%), linear-gradient(to top, rgba(255, 255, 255, 0.40) 0%, rgba(0, 0, 0, 0.25) 200%);

    color: rgb(255, 255, 255);
}

/* --------------------------- */

.company {
    display: flex;

    align-items: flex-start;
    justify-content: center;

    margin-bottom: 20px;
    color: #c0c0c0;

    border-bottom: 2px solid #464646;

    animation: company1 7s ease infinite;
}

.keyboard {
    --keyboard-key-width: 60px;
    --keyboard-key-height: 35px;
    --keyboard-row-gap: 5px;

    /* background-color: rgb(168, 168, 168); */

    /* max-width: 50rem; */
    min-height: 17rem;

    color: rgb(221, 221, 221);

    /* border-radius: 10px; */
    /* border-top: 3px solid #111111; */

    text-transform: uppercase;
}


.keyboard-row {
    display: flex;

    justify-content: center;
    align-items: center;

    margin-top: 10px;
    font-weight: bold;
    font-size: 13px;

    gap: var(--keyboard-row-gap);
}

.keyboard-row.small {
    --keyboard-key-height: 25px;
}

.tab,
.enter {
    /* flex: 1 1 200px; */
    flex: 1 1 calc(var(--keyboard-key-width) * 1.5);
}

.caps {
    /* flex: 1 1 225px; */
    flex: 1 1 calc(var(--keyboard-key-width) * 1.75);
}

.shift {
    /* flex: 1 1 250px; */
    flex: 1 1 calc(var(--keyboard-key-width) * 2);
}

.prob {
    /* flex: 1 1 700px;*/
    flex: 1 1 calc(var(--keyboard-key-width) * 5);
}

.keyboard-arrows  {
    --keyboard-key-height: auto;
    --keyboard-key-width: 47px;

    display: grid;
    gap: var(--keyboard-row-gap);

    align-self: stretch;
}

.keyboard-arrows .left {
    grid-area: 2 span / 1;
}

.keyboard-arrows .right {
    grid-area: 2 span / 3;
}

.keyboard-arrows .up {
    grid-area: 1 / 2;
}

.keyboard-arrows .down {
    grid-area: 2 / 2;
}

.keyboard-arrows > .keyboard-key {
    font-size: 8px;
}

.keyboard-key {
    position: relative;

    display: flex;

    justify-content: center;
    align-items: center;

    width: var(--keyboard-key-width);
    height: var(--keyboard-key-height);

    padding: 0;

    font: inherit;
    line-height: 1;
    color: inherit;

    border: none;
    border-radius: 3px;
    background-color: #5f5f5f;
}

.keyboard-key.left span, .keyboard-key.right span {
    rotate: -90deg;
}

.keyboard-key:before,
.keyboard-key:after {
    --key-offset: -6px;

    content: attr(data-key-b);

    position: relative;
    inset: var(--key-offset) auto auto var(--key-offset);
}

.keyboard-key::after {
    --key-offset: 6px;

    content: attr(data-key-a);
}